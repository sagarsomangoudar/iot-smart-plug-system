plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.5'  /*--->  1.8.5.22.RELEASE changed to 3.2.5 which is latest version */
}


defaultTasks 'clean', 'test', 'jacocoTestReport'

compileJava.options.encoding = 'UTF-8'

group = 'iot_ece448'
version = '1.0.0'
sourceCompatibility = 17				/*---> 11 changed to 17 */
targetCompatibility = 17				/*---> 11 changed to 17 */
buildDir = 'build'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.9'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.5'      /*---> added implementation 3.2.5 for new version */
    testImplementation 'junit:junit:4.13'
}



sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

task iot_sim(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
    classpath sourceSets.main.runtimeClasspath
    main = 'ece448.iot_sim.Main'
    if (project.hasProperty("config")) args project.getProperty('config')
}

task iot_sim_ex(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
    classpath sourceSets.main.runtimeClasspath
    main = 'ece448.iot_sim.Main'
    args 'simConfigEx.json'
}

task iot_hub(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
    classpath sourceSets.main.runtimeClasspath
    main = 'ece448.iot_hub.Main'
}

6.times { proj ->
    task "grade_p$proj"(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
        classpath sourceSets.main.runtimeClasspath
        main = "ece448.grading.GradeP$proj"
    }
}

jacoco {
    toolVersion = '0.8.11'
}

